<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cen.news_reply.dao.news_replyDao" >
  <resultMap id="BaseResultMap" type="com.cen.news_reply.entity.news_reply" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="uid" property="uid" jdbcType="VARCHAR" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="reply_uid" property="reply_uid" jdbcType="INTEGER" />
    <result column="time" property="time" jdbcType="TIMESTAMP" />
    <result column="type" property="type" jdbcType="VARCHAR" />
    <result column="pid" property="pid" jdbcType="INTEGER" />
  </resultMap>

  <sql id="Base_Column_List" >
    id, uid, content, reply_uid, time,type,pid
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from news_reply
    where id = #{id,jdbcType=INTEGER}
  </select>

  <!--查询回复的-->
  <select id="select_replyId" resultMap="BaseResultMap">
  	select * from news_reply where reply_uid = #{reply_uid}
  	and type = #{type}
    <!-- 分页 -->
    <if test="pageNum != null and pageSize != null">
      limit #{pageNum}, #{pageSize}
    </if>
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from news_reply
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.cen.news_reply.entity.news_reply" >
    insert into news_reply (id, uid, content, reply_uid,time,type,pid)
    values (#{id,jdbcType=INTEGER}, #{uid,jdbcType=VARCHAR},#{content,jdbcType=VARCHAR}, #{reply_uid,jdbcType=INTEGER}, #{time,jdbcType=TIMESTAMP},
    #{type,jdbcType=VARCHAR},#{pid,jdbcType=INTEGER}
    )
  </insert>
  <insert id="insertSelective" parameterType="com.cen.news_reply.entity.news_reply" >
    insert into news_reply
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="uid != null" >
        uid,
      </if>
       <if test="content != null" >
        content,
      </if>
      <if test="reply_uid != null" >
        reply_uid,
      </if>
      <if test="time != null" >
        time,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="pid != null" >
        pid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="uid != null" >
        #{uid,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="reply_uid != null" >
        #{reply_uid,jdbcType=INTEGER},
      </if>
      <if test="time != null" >
        #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="type != null" >
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="pid != null" >
        #{pid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.cen.news_reply.entity.news_reply" >
    update news_reply
    <set >
      <if test="uid != null" >
        uid = #{uid,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="reply_uid != null" >
        reply_uid = #{reply_uid,jdbcType=INTEGER},
      </if>
      <if test="time != null" >
        time = #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="pid != null" >
        pid = #{pid,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cen.news_reply.entity.news_reply" >
    update news_reply
    set uid = #{uid,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      reply_uid = #{reply_uid,jdbcType=INTEGER},
      time = #{time,jdbcType=TIMESTAMP},
       type = #{type,jdbcType=VARCHAR},
       pid = #{pid,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>