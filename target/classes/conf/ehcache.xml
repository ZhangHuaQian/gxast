<ehcache updateCheck="false">

    <!--  <diskStore path="C:/ehcache"/> -->
    <!-- user.home：用户的家目录。
	user.dir：用户的当前工作目录。
	java.io.tmpdir：Java临时目录。 -->
    <diskStore path="${webapp.root}"/>

   <!-- 存储最大对象数 -->  
   <!-- 是否永久保存 -->  
   <!-- 最大空闲时间  单位：秒 -->  
   <!-- 存活时间 -->  
   <!-- 溢出到磁盘 -->  
   <!-- 磁盘上最大存储的对象数 -->  
   <!-- 服务器重启后磁盘上的数据是否有效 -->  
   <!-- 每隔多长时间去开启一次线程清理数据 -->  
   <!-- 淘汰策略    最近一段时间利用率低的会被优先清理掉 -->  
    <defaultCache  
            maxElementsInMemory="10000"  
            eternal="false"  
            timeToIdleSeconds="120"  
            timeToLiveSeconds="120"  
            overflowToDisk="true"
            maxElementsOnDisk="10000000"
            diskPersistent="false"
            diskExpiryThreadIntervalSeconds="120"
            memoryStoreEvictionPolicy="LRU"  
            />

    <!--  Token 7天(604800) -->
    <cache name="cen_xczhapp_token"
           maxElementsInMemory="10000"
           eternal="false"
           timeToIdleSeconds="604800"
           timeToLiveSeconds="604800"
           maxElementsOnDisk="10000000"
           diskPersistent="false"
           diskExpiryThreadIntervalSeconds="60"
           memoryStoreEvictionPolicy="LRU">
        <!--<persistence strategy="localTempSwap"/>-->
    </cache>


    <!-- 资讯缓存 12 个小时 -->
    <cache name="FOREIGN_NEWS"
           maxElementsInMemory="10000"
           eternal="false"
           timeToIdleSeconds="43200"
           timeToLiveSeconds="43200"
           maxElementsOnDisk="10000000"
           diskPersistent="false"
           diskExpiryThreadIntervalSeconds="60"
           memoryStoreEvictionPolicy="LRU">
        <!--<persistence strategy="localTempSwap"/>-->
    </cache>

    <!-- 手机验证码 5分钟(300) -->
    <cache name="cen_xczhapp_phone_code"
           maxElementsInMemory="10000"
           eternal="false"
           timeToIdleSeconds="300"
           timeToLiveSeconds="300"
           maxElementsOnDisk="10000000"
           diskExpiryThreadIntervalSeconds="60"
           memoryStoreEvictionPolicy="LRU">
        <persistence strategy="localTempSwap"/>
    </cache>
    <!--首页外部接口缓存-->
    <cache name="cen_crmjl"
           maxElementsInMemory="10000"
           eternal="false"
           timeToIdleSeconds="604800"
           timeToLiveSeconds="604800"
           maxElementsOnDisk="10000000"
           diskExpiryThreadIntervalSeconds="60"
           memoryStoreEvictionPolicy="LRU">
        <persistence strategy="localTempSwap"/>
    </cache>


    <!--默认缓存配置，以下属性是必须的：
            name ：cache的标识符，在一个CacheManager中必须唯一。
            maxElementsInMemory ： 在内存中缓存的element的最大数目。
            maxElementsOnDisk ： 在磁盘上缓存的element的最大数目。
            eternal ： 设定缓存的elements是否有有效期。如果为true，timeouts属性被忽略。
            overflowToDisk ： 设定当内存缓存溢出的时候是否将过期的element缓存到磁盘上。
            以下属性是可选的：
            timeToIdleSeconds ： 缓存element在过期前的空闲时间。
            timeToLiveSeconds ： 缓存element的有效生命期。
            diskPersistent ： 在VM重启的时候是否持久化磁盘缓存，默认是false。不能和<persistence strategy="localTempSwap"/>同时使用
            diskExpiryThreadIntervalSeconds ： 磁盘缓存的清理线程运行间隔，默认是120秒.
            memoryStoreEvictionPolicy ： 当内存缓存达到最大，有新的element加入的时候，
            移除缓存中element的策略。默认是LRU，可选的有LFU和FIFO
            缓存子元素：
            cacheEventListenerFactory：注册相应的的缓存监听类，用于处理缓存事件，如put,remove,update,和expire
            bootstrapCacheLoaderFactory:指定相应的BootstrapCacheLoader，用于在初始化缓存，以及自动设置。
    -->

    <!--
        LRU:LRU是Least Recently Used 的缩写 LRU缓存把最近最少使用的数据移除，让给最新读取的数据。而往往最常读取的，也是读取次数最多的，所以，利用LRU缓存，我们能够提高系统的performance(性能)
        LFU是最近最不常用页面置换算法(Least Frequently Used),也就是淘汰一定时期内被访问次数最少的页!
        FIFO(First In First Out ，先进先出)
      算法是根据先进先出原理来淘汰数据的，实现上是最简单的一种,具体算法如下：
      1. 新访问的数据插入FIFO队列尾部，数据在FIFO队列中顺序移动；
      2. 淘汰FIFO队列头部的数据；
     -->
</ehcache>
